# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Elixir CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    name: Build and test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Elixir
      uses: erlef/setup-beam@5304e04ea2b355f03681464e683d92e3b2f18451 # v1.16.0
      with:
        elixir-version: '1.18.2' # [Required] Define the Elixir version
        otp-version: '27.2'      # [Required] Define the Erlang/OTP version
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: "[Root] Install dependencies"
      run: mix deps.get
    - name: "[Projects] Install dependencies"
      run: mix workspace.run -t deps.get --affected
    - name: "[Projects] Compile"
      run: mix workspace.run -t compile --affected --order postorder -- --force --warning-as-errors
    - name: "[Projects] Test"
      run: mix workspace.run -t test --affected --order postorder -- --cover
    - name: "[Projects] Lint"
      run: mix workspace.run -t credo --affected -- --strict
    - name: "[Projects] Format"
      run: mix workspace.run -t format --modified -- --check-formatted
    - name: "[Projects] Coverage"
      run: mix workspace.test.coverage --affected
